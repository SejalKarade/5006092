import java.util.Arrays;

public class SearchFunctions {

    public static int linearSearch(Product[] products, String productName) {
        for (int i = 0; i < products.length; i++) {
            if (products[i].getProductName().equalsIgnoreCase(productName)) {
                return i;
            }
        }
        return -1;
    }

    public static int binarySearch(Product[] products, String productName) {
        int left = 0;
        int right = products.length - 1;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            int result = productName.compareToIgnoreCase(products[mid].getProductName());
            if (result == 0) {
                return mid;
            }
            if (result > 0) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        return -1;
    }

    public static void main(String[] args) {
        Product[] products = {
            new Product("1", "Laptop", "Electronics"),
            new Product("2", "Smartphone", "Electronics"),
            new Product("3", "Tablet", "Electronics"),
            new Product("4", "Monitor", "Electronics")
        };

        Arrays.sort(products, (p1, p2) -> p1.getProductName().compareToIgnoreCase(p2.getProductName()));

        String searchName = "Smartphone";

        int linearIndex = linearSearch(products, searchName);
        System.out.println("Linear Search: " + (linearIndex != -1 ? "Found at index " + linearIndex : "Not Found"));

        int binaryIndex = binarySearch(products, searchName);
        System.out.println("Binary Search: " + (binaryIndex != -1 ? "Found at index " + binaryIndex : "Not Found"));
    }
}
